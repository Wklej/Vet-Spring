[{"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\index.js":"1","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\App.js":"2","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\reportWebVitals.js":"3","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\NavBar.js":"4","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Footer.js":"5","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Animal.js":"6","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\AnimalList.js":"7","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\MyToast.js":"8","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\UserList.js":"9","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\ModalTest.js":"10","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\AnimalModal.js":"11","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\UserAdd.js":"12","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\OrdersList.js":"13","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\OrderAdd.js":"14","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Storage.js":"15","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\SupplyAdd.js":"16","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Booking.js":"17","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Login.js":"18","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\ClientPage.js":"19","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\VisitCalendar.js":"20","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\BookingPage.js":"21","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\WorkerPage.js":"22"},{"size":593,"mtime":1613038718752,"results":"23","hashOfConfig":"24"},{"size":2951,"mtime":1613080245382,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":1953,"mtime":1613079662908,"results":"27","hashOfConfig":"24"},{"size":691,"mtime":1612881350819,"results":"28","hashOfConfig":"24"},{"size":6874,"mtime":1612900878256,"results":"29","hashOfConfig":"24"},{"size":8999,"mtime":1613058964072,"results":"30","hashOfConfig":"24"},{"size":1111,"mtime":1611428966936,"results":"31","hashOfConfig":"24"},{"size":10021,"mtime":1613066874555,"results":"32","hashOfConfig":"24"},{"size":6839,"mtime":1612297680322,"results":"33","hashOfConfig":"24"},{"size":5229,"mtime":1612900963755,"results":"34","hashOfConfig":"24"},{"size":6533,"mtime":1612958706840,"results":"35","hashOfConfig":"24"},{"size":8536,"mtime":1613059036107,"results":"36","hashOfConfig":"24"},{"size":6325,"mtime":1612958636116,"results":"37","hashOfConfig":"24"},{"size":8560,"mtime":1613058881715,"results":"38","hashOfConfig":"24"},{"size":6324,"mtime":1612962009917,"results":"39","hashOfConfig":"24"},{"size":2089,"mtime":1613071152213,"results":"40","hashOfConfig":"24"},{"size":4181,"mtime":1613079920278,"results":"41","hashOfConfig":"24"},{"size":3383,"mtime":1613078954598,"results":"42","hashOfConfig":"24"},{"size":1950,"mtime":1613067842509,"results":"43","hashOfConfig":"24"},{"size":3761,"mtime":1613078520226,"results":"44","hashOfConfig":"24"},{"size":3362,"mtime":1613080671291,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mage9g",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\index.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\App.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\reportWebVitals.js",[],["99","100"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\NavBar.js",["101"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Footer.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Animal.js",["102"],"import React, {Component} from \"react\";\r\nimport {Card, Form, Button} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class Animal extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.animalChange = this.animalChange.bind(this);\r\n        this.SubmitAnimal = this.SubmitAnimal.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: \"\", name: \"\", age: \"\", typ: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const animalId = +this.props.match.params.id;\r\n        if(animalId != null){\r\n           this.finAnimalById(animalId);\r\n        }\r\n    }\r\n\r\n    finAnimalById = (animalId) => {\r\n        axios.get(\"http://localhost:8080/api/Animals?index=\"+animalId)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\r\n                        id: response.data.animalID,\r\n                        name: response.data.name,\r\n                        age: response.data.age,\r\n                        typ: response.data.typ\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n            console.error(\"Error\" + error)\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    updateAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            animalID : this.state.id,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.put(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                    setTimeout(() => this.animalList(), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    SubmitAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    animalChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    animalList = () => {\r\n        return this.props.history.push(\"/list\")\r\n    }\r\n\r\n    render() {\r\n        const {name, age, animalID, typ} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show = {this.state.show} message = {this.state.method === \"put\" ?\r\n                        \"Animal updated Successfully.\" : \"Animal saved Successfully.\"} type = {\"success\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark text-black\"}\r\n                      style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}>\r\n                    <Card.Header><FontAwesomeIcon icon={this.state.id !== \"\" ? faEdit : faPlusSquare}/>\r\n                    {this.state.id !== \"\" ? \" Update Animal\" : \" Add new Animal\"}</Card.Header>\r\n                    <Form id={\"AnimalFormId\"} onSubmit={this.state.id !== \"\" ?\r\n                        this.updateAnimal : this.SubmitAnimal} onReset={this.resetForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter a Name\"\r\n                                                  className={\"text-black\"} name={\"name\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={name} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Age</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"number\"} placeholder=\"Age\"\r\n                                                  className={\"text-black\"} name={\"age\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={age} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Type</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"text\"} placeholder=\"Type\"\r\n                                                  className={\"text-black\"} name={\"typ\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={typ} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> {this.state.id !== \"\" ? \"Update\" : \"Save\"}\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"button\" onClick={this.animalList.bind()}>\r\n                                <FontAwesomeIcon icon={faList} /> Animal List\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\AnimalList.js",["103"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\MyToast.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\UserList.js",["104","105","106","107"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\ModalTest.js",["108","109","110"],"import {Component} from \"react\";\r\nimport React from \"react\";\r\nimport {Button, Card, Form, Modal} from \"react-bootstrap\";\r\nimport Animal from \"./Animal\";\r\nimport MyToast from \"./MyToast\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport axios from \"axios\";\r\n\r\nexport default class ModalTest extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.animalChange = this.animalChange.bind(this);\r\n        this.SubmitAnimal = this.SubmitAnimal.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: \"\", name: \"\", age: \"\", typ: \"\", show: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        const animalId = +this.props.match.params.id;\r\n        if(animalId != null){\r\n            this.finAnimalById(animalId);\r\n        }\r\n    }\r\n\r\n    finAnimalById = (animalId) => {\r\n        axios.get(\"http://localhost:8080/api/Animals?index=\"+animalId)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\r\n                        id: response.data.animalID,\r\n                        name: response.data.name,\r\n                        age: response.data.age,\r\n                        typ: response.data.typ\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n            console.error(\"Error\" + error)\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    updateAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            animalID : this.state.id,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.put(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                    setTimeout(() => this.animalList(), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    SubmitAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    animalChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    animalList = () => {\r\n        return this.props.history.push(\"/list\")\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({\r\n            show: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, age, animalID, typ} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div style={{\"display\": this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show={this.state.show} message={this.state.method === \"put\" ?\r\n                        \"Animal updated Successfully.\" : \"Animal saved Successfully.\"} type={\"success\"}/>\r\n                </div>\r\n                <Modal show={this.state.show} onHide={this.handleClose} className={\"border border-dark bg-dark text-white\"}>\r\n                    <Modal.Header><FontAwesomeIcon icon={this.state.id !== \"\" ? faEdit : faPlusSquare}/>\r\n                        {this.state.id !== \"\" ? \" Update Animal\" : \" Add new Animal\"}</Modal.Header>\r\n                    <Form id={\"AnimalFormId\"} onSubmit={this.state.id !== \"\" ?\r\n                        this.updateAnimal : this.SubmitAnimal} onReset={this.resetForm}>\r\n                        <Modal.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter a Name\"\r\n                                                  className={\"bg-dark text-white\"} name={\"name\"}\r\n                                                  value={name} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Age</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"number\"} placeholder=\"Age\"\r\n                                                  className={\"bg-dark text-white\"} name={\"age\"}\r\n                                                  value={age} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Type</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"text\"} placeholder=\"Type\"\r\n                                                  className={\"bg-dark text-white\"} name={\"typ\"}\r\n                                                  value={typ} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave}/> {this.state.id !== \"\" ? \"Update\" : \"Save\"}\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo}/> Reset\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"button\" onClick={this.animalList.bind()}>\r\n                                <FontAwesomeIcon icon={faList}/> Animal List\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}",["111","112"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\AnimalModal.js",["113","114"],"import React, {Component} from \"react\";\r\nimport {Card, Form, Button} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class AnimalModal extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.animalChange = this.animalChange.bind(this);\r\n        this.SubmitAnimal = this.SubmitAnimal.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: \"\", name: \"\", age: \"\", typ: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    SubmitAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    animalChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {name, age, animalID, typ} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show = {this.state.show} message = {this.state.method === \"put\" ?\r\n                        \"Animal updated Successfully.\" : \"Animal saved Successfully.\"} type = {\"success\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark text-black\"}\r\n                      style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}>\r\n                    <Card.Header><FontAwesomeIcon icon={this.state.id !== \"\" ? faEdit : faPlusSquare}/>\r\n                    {this.state.id !== \"\" ? \" Update Animal\" : \" Add new Animal\"}</Card.Header>\r\n                    <Form id={\"AnimalFormId\"} onSubmit={this.state.id !== \"\" ?\r\n                        this.updateAnimal : this.SubmitAnimal} onReset={this.resetForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter a Name\"\r\n                                                  className={\"text-black\"} name={\"name\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={name} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Age</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"number\"} placeholder=\"Age\"\r\n                                                  className={\"text-black\"} name={\"age\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={age} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Type</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"text\"} placeholder=\"Type\"\r\n                                                  className={\"text-black\"} name={\"typ\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={typ} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> Save\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"button\" onClick={this.props.onClick}> Close\r\n                            </Button>{' '}\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\UserAdd.js",["115","116"],"import React, {Component} from \"react\";\r\nimport {Card, Form, Button} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class UserAdd extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.userChange = this.userChange.bind(this);\r\n        this.SubmitUser = this.SubmitUser.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: \"\", email: \"\", rank: \"\", password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = +this.props.match.params.id;\r\n        if(userId != null){\r\n            this.finUserById(userId);\r\n        }\r\n    }\r\n\r\n    finUserById = (UserId) => {\r\n        axios.get(\"http://localhost:8080/api/Users?index=\"+UserId)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        email: response.data.email,\r\n                        rank: response.data.rank,\r\n                        password: response.data.password\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n            console.error(\"Error\" + error)\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    updateUser = event => {\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            id : this.state.id,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            rank: this.state.rank\r\n        }\r\n        console.log(user)\r\n\r\n        axios.put(\"http://localhost:8080/api/Users\", user)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                    setTimeout(() => this.usersList(), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    SubmitUser = event => {\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            email: this.state.email,\r\n            rank: \"CLIENT\",\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/api/Users\", user)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"post\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                    setTimeout(() => this.usersList(), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    userChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    usersList = () => {\r\n        return this.props.history.push(\"/users\")\r\n    }\r\n\r\n    render() {\r\n        const {id, email, rank, password} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show = {this.state.show} message = {this.state.method === \"put\" ?\r\n                        \"User updated Successfully.\" : \"User saved Successfully.\"} type = {\"success\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark text-black\"} style={{\r\n                    backgroundColor: 'rgba(255, 255, 255, 0.4)'\r\n                }}>\r\n                    <Card.Header><FontAwesomeIcon icon={this.state.id !== \"\" ? faEdit : faPlusSquare}/>\r\n                        {this.state.id !== \"\" ? \" Update User\" : \" Add new User\"}</Card.Header>\r\n                    <Form id={\"UserFormId\"} onSubmit={this.state.id !== \"\" ?\r\n                        this.updateUser : this.SubmitUser} onReset={this.resetForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter Email\"\r\n                                                  className={\"text-black\"} name={\"email\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={email} onChange={this.userChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"password\"} placeholder=\"Password\"\r\n                                                  className={\"text-black\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  name={\"password\"}\r\n                                                  value={password} onChange={this.userChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> {this.state.id !== \"\" ? \"Update\" : \"Save\"}\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>{' '}\r\n                            {this.state.id !== \"\" ?\r\n                                <Button variant=\"info\" type=\"button\" onClick={this.usersList.bind()}>\r\n                                    <FontAwesomeIcon icon={faList}/> Users List\r\n                                </Button> : null\r\n                            }\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\OrdersList.js",["117","118"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\OrderAdd.js",["119"],"import React, {Component} from \"react\";\r\nimport {Card, Form, Button} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class OrderAdd extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.orderChange = this.orderChange.bind(this);\r\n        this.SubmitOrder = this.SubmitOrder.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        ordersID: \"\",\r\n        name: \"\",\r\n        amount: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const orderId = +this.props.match.params.id;\r\n        if(orderId != null){\r\n            this.finOrderById(orderId);\r\n        }\r\n    }\r\n\r\n    finOrderById = (OrderId) => {\r\n        axios.get(\"http://localhost:8080/api/Orders?index=\"+OrderId)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\r\n                        ordersID: response.data.ordersID,\r\n                        name: response.data.name,\r\n                        amount: response.data.amount\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n            console.error(\"Error\" + error)\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    updateOrder = event => {\r\n        event.preventDefault();\r\n\r\n        const order = {\r\n            ordersID : this.state.ordersID,\r\n            name: this.state.name,\r\n            amount: this.state.amount\r\n        }\r\n        {console.log(order)}\r\n\r\n        axios.put(\"http://localhost:8080/api/Orders\", order)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                    setTimeout(() => this.ordersList(), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    SubmitOrder = event => {\r\n        event.preventDefault();\r\n\r\n        const order = {\r\n                name: this.state.name,\r\n                amount: this.state.amount\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/api/Orders\", order)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"post\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    orderChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    ordersList = () => {\r\n        return this.props.history.push(\"/orders\")\r\n    }\r\n\r\n    render() {\r\n        const {ordersID, name, amount} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show = {this.state.show} message = {this.state.method === \"put\" ?\r\n                        \"Order updated Successfully.\" : \"Order saved Successfully.\"} type = {\"success\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark text-black\"} style={{\r\n                    backgroundColor: 'rgba(255, 255, 255, 0.4)'\r\n                }}>\r\n                    <Card.Header><FontAwesomeIcon icon={ordersID !== \"\" ? faEdit : faPlusSquare}/>\r\n                        {ordersID !== \"\" ? \" Update Order\" : \" Add new Order\"}</Card.Header>\r\n                    <Form id={\"OrderFormId\"} onSubmit={ordersID !== \"\" ?\r\n                        this.updateOrder : this.SubmitOrder} onReset={this.resetForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter Name\"\r\n                                                  className={\"text-black\"} name={\"name\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={name} onChange={this.orderChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Amount</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"value\"} placeholder=\"Amount\"\r\n                                                  className={\"text-black\"} name={\"amount\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={amount} onChange={this.orderChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> {ordersID !== \"\" ? \"Update\" : \"Save\"}\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>{' '}\r\n                            {ordersID !== \"\" ?\r\n                                <Button variant=\"info\" type=\"button\" onClick={this.ordersList.bind()}>\r\n                                    <FontAwesomeIcon icon={faList}/> Orders List\r\n                                </Button> : null\r\n                            }\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Storage.js",["120"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\SupplyAdd.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Booking.js",["121"],"import {React, Component} from \"react\";\r\nimport {Button, Col, Row, Container} from \"react-bootstrap\";\r\nimport \"./CSS/Style.css\"\r\n\r\nexport default class Booking extends Component {\r\n\r\n    bookingPage = () => {\r\n        return this.props.history.push(\"/bookingPage\")\r\n    }\r\n\r\n    months(){\r\n        var tab = []\r\n        for(var i = 0; i < 4; i++){\r\n            tab.push(\r\n                <Row className=\"border border-right-0 border-bottom-0\" style={{backgroundColor: 'rgba(150, 150, 150, 0.5)', height: '16vh'}}>\r\n                    {this.day(i * 7)}\r\n                </Row>\r\n            )\r\n        }\r\n        return tab\r\n    }\r\n\r\n    day(x){\r\n        var tab = []\r\n        for(var i = 0; i < 7; i++){\r\n            tab.push(\r\n            <Col className=\"day p-lg-2 border border-left-0 border-top-0 text-truncate \">\r\n                <Button className={\"btn-calendar\"} onClick={this.bookingPage}>\r\n                    <h5 className=\"row align-items-center\">\r\n                        <span className=\"date col-1\">{i + x + 1}</span>\r\n                    </h5>\r\n                </Button>\r\n                <p className=\"d-sm-none\">No events</p>\r\n            </Col>\r\n            )\r\n        }\r\n        return tab\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n    return(\r\n        <div className=\"container-fluid\">\r\n            <header>\r\n                <h1 className=\"display-5 mb-6 text-center\">February 2021</h1>\r\n                <div className=\"row d-none d-sm-flex p-1 bg-dark text-white\">\r\n                    <h5 className=\"col-sm p-1 text-center\">Monday</h5>\r\n                    <h5 className=\"col-sm p-1 text-center\">Tuesday</h5>\r\n                    <h5 className=\"col-sm p-1 text-center\">Wednesday</h5>\r\n                    <h5 className=\"col-sm p-1 text-center\">Thursday</h5>\r\n                    <h5 className=\"col-sm p-1 text-center\">Friday</h5>\r\n                    <h5 className=\"col-sm p-1 text-center\">Saturday</h5>\r\n                    <h5 className=\"col-sm p-1 text-center\">Sunday</h5>\r\n                </div>\r\n            </header>\r\n            {this.months()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Login.js",["122","123","124"],"import React, {Component} from \"react\";\r\nimport {Card, Form, Button} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class Login extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.userChange = this.userChange.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        users: [],\r\n        email: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/api/Users/all\")\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({users: data})\r\n            })\r\n\r\n    }\r\n\r\n    findUser = (pass) => {\r\n        this.state.users.map(user => {\r\n            if(user.email === this.state.email){\r\n                if(user.password === pass){\r\n                    localStorage.setItem(\"userID\", user.id)\r\n                    localStorage.setItem(\"islogged\", true)\r\n                    this.afterLoginPage(user)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    userChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    afterLoginPage = (user) => {\r\n        if(user.rank === \"CLIENT\")\r\n            return this.props.history.push(\"/clientpage\")\r\n        else\r\n            return this.props.history.push(\"/workerpage\")\r\n    }\r\n\r\n    render() {\r\n        const {email, password} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <Card className={\"border border-dark text-black\"} style={{\r\n                    backgroundColor: 'rgba(255, 255, 255, 0.4)'\r\n                }}>\r\n                    <Card.Header><FontAwesomeIcon icon={this.state.id !== \"\" ? faEdit : faPlusSquare}/> Log in</Card.Header>\r\n                    <Form id={\"LoginFormId\"} onReset={this.resetForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter Email\"\r\n                                                  className={\"text-black\"} name={\"email\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  value={email} onChange={this.userChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"password\"} placeholder=\"Password\"\r\n                                                  className={\"text-black\"}\r\n                                                  style={{backgroundColor: 'rgba(255, 255, 255, 0.4)'}}\r\n                                                  name={\"password\"}\r\n                                                  value={password} onChange={this.userChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"success\" type=\"button\" onClick={() => this.findUser(password)}>\r\n                                <FontAwesomeIcon icon={faSave} /> Login\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\ClientPage.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\VisitCalendar.js",["125"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\BookingPage.js",["126","127","128","129","130","131","132","133"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\WorkerPage.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":2,"column":29,"nodeType":"140","messageId":"141","endLine":2,"endColumn":35},{"ruleId":"138","severity":1,"message":"142","line":105,"column":27,"nodeType":"140","messageId":"141","endLine":105,"endColumn":35},{"ruleId":"138","severity":1,"message":"143","line":2,"column":68,"nodeType":"140","messageId":"141","endLine":2,"endColumn":71},{"ruleId":"138","severity":1,"message":"144","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"143","line":2,"column":68,"nodeType":"140","messageId":"141","endLine":2,"endColumn":71},{"ruleId":"138","severity":1,"message":"145","line":17,"column":8,"nodeType":"140","messageId":"141","endLine":17,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":49,"column":35,"nodeType":"148","messageId":"149","endLine":49,"endColumn":37},{"ruleId":"138","severity":1,"message":"150","line":3,"column":17,"nodeType":"140","messageId":"141","endLine":3,"endColumn":21},{"ruleId":"138","severity":1,"message":"151","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":14},{"ruleId":"138","severity":1,"message":"142","line":119,"column":27,"nodeType":"140","messageId":"141","endLine":119,"endColumn":35},{"ruleId":"134","replacedBy":"152"},{"ruleId":"136","replacedBy":"153"},{"ruleId":"138","severity":1,"message":"154","line":5,"column":17,"nodeType":"140","messageId":"141","endLine":5,"endColumn":23},{"ruleId":"138","severity":1,"message":"142","line":60,"column":27,"nodeType":"140","messageId":"141","endLine":60,"endColumn":35},{"ruleId":"138","severity":1,"message":"155","line":107,"column":16,"nodeType":"140","messageId":"141","endLine":107,"endColumn":18},{"ruleId":"138","severity":1,"message":"156","line":107,"column":27,"nodeType":"140","messageId":"141","endLine":107,"endColumn":31},{"ruleId":"138","severity":1,"message":"143","line":2,"column":68,"nodeType":"140","messageId":"141","endLine":2,"endColumn":71},{"ruleId":"138","severity":1,"message":"157","line":107,"column":15,"nodeType":"140","messageId":"141","endLine":107,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":59,"column":9,"nodeType":"160","messageId":"161","endLine":59,"endColumn":29},{"ruleId":"138","severity":1,"message":"143","line":2,"column":68,"nodeType":"140","messageId":"141","endLine":2,"endColumn":71},{"ruleId":"138","severity":1,"message":"162","line":2,"column":27,"nodeType":"140","messageId":"141","endLine":2,"endColumn":36},{"ruleId":"138","severity":1,"message":"154","line":5,"column":17,"nodeType":"140","messageId":"141","endLine":5,"endColumn":23},{"ruleId":"138","severity":1,"message":"163","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":15},{"ruleId":"146","severity":1,"message":"147","line":33,"column":35,"nodeType":"148","messageId":"149","endLine":33,"endColumn":37},{"ruleId":"138","severity":1,"message":"162","line":2,"column":19,"nodeType":"140","messageId":"141","endLine":2,"endColumn":28},{"ruleId":"138","severity":1,"message":"164","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"165","line":2,"column":39,"nodeType":"140","messageId":"141","endLine":2,"endColumn":42},{"ruleId":"138","severity":1,"message":"166","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":15},{"ruleId":"138","severity":1,"message":"167","line":5,"column":47,"nodeType":"140","messageId":"141","endLine":5,"endColumn":53},{"ruleId":"138","severity":1,"message":"168","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":13},{"ruleId":"138","severity":1,"message":"169","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":20},{"ruleId":"138","severity":1,"message":"170","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":20},{"ruleId":"138","severity":1,"message":"171","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":22},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'animalID' is assigned a value but never used.","'Nav' is defined but never used.","'Modal' is defined but never used.","'AnimalModal' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Card' is defined but never used.","'Animal' is defined but never used.",["172"],["173"],"'faList' is defined but never used.","'id' is assigned a value but never used.","'rank' is assigned a value but never used.","'pageNumCss' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Container' is defined but never used.","'MyToast' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'faEdit' is defined but never used.","'faUndo' is defined but never used.","'axios' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","no-global-assign","no-unsafe-negation"]