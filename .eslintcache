[{"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\index.js":"1","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\App.js":"2","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\reportWebVitals.js":"3","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\NavBar.js":"4","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Welcome.js":"5","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Footer.js":"6","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Animal.js":"7","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\AnimalList.js":"8","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\MyToast.js":"9","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\UserList.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1166,"mtime":1611582255458,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":720,"mtime":1611581081297,"results":"15","hashOfConfig":"12"},{"size":385,"mtime":1611259408268,"results":"16","hashOfConfig":"12"},{"size":630,"mtime":1611259341518,"results":"17","hashOfConfig":"12"},{"size":6514,"mtime":1611435538648,"results":"18","hashOfConfig":"12"},{"size":7699,"mtime":1611587502804,"results":"19","hashOfConfig":"12"},{"size":1111,"mtime":1611428966936,"results":"20","hashOfConfig":"12"},{"size":175,"mtime":1611581219810,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mage9g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\index.js",[],["44","45"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\App.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\reportWebVitals.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\NavBar.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Welcome.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Footer.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\Animal.js",["46"],"import React, {Component} from \"react\";\r\nimport {Card, Form, Button} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faList, faPlusSquare, faSave, faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from \"axios\";\r\nimport MyToast from \"./MyToast\";\r\n\r\nexport default class Animal extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.state.show = false;\r\n        this.animalChange = this.animalChange.bind(this);\r\n        this.SubmitAnimal = this.SubmitAnimal.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        id: \"\", name: \"\", age: \"\", typ: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const animalId = +this.props.match.params.id;\r\n        if(animalId != null){\r\n           this.finAnimalById(animalId);\r\n        }\r\n    }\r\n\r\n    finAnimalById = (animalId) => {\r\n        axios.get(\"http://localhost:8080/api/Animals?index=\"+animalId)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\r\n                        id: response.data.animalID,\r\n                        name: response.data.name,\r\n                        age: response.data.age,\r\n                        typ: response.data.typ\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n            console.error(\"Error\" + error)\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    updateAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            animalID : this.state.id,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.put(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                    setTimeout(() => this.animalList(), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    SubmitAnimal = event => {\r\n        event.preventDefault();\r\n\r\n        const animal = {\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            typ: this.state.typ\r\n        }\r\n\r\n        axios.post(\"http://localhost:8080/api/Animals\", animal)\r\n            .then(response => {\r\n                if(response.data != null){\r\n                    this.setState({\"show\":true, \"method\":\"put\"})\r\n                    setTimeout(() => this.setState({\"show\":false}), 3000)\r\n                } else{\r\n                    this.setState({\"show\":false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    animalChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    animalList = () => {\r\n        return this.props.history.push(\"/list\")\r\n    }\r\n\r\n    render() {\r\n        const {name, age, animalID, typ} = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <div style={{\"display\":this.state.show ? \"block\" : \"none\"}}>\r\n                    <MyToast show = {this.state.show} message = {this.state.method === \"put\" ?\r\n                        \"Animal updated Successfully.\" : \"Animal saved Successfully.\"} type = {\"success\"}/>\r\n                </div>\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header><FontAwesomeIcon icon={this.state.id !== \"\" ? faEdit : faPlusSquare}/>\r\n                    {this.state.id !== \"\" ? \" Update Animal\" : \" Add new Animal\"}</Card.Header>\r\n                    <Form id={\"AnimalFormId\"} onSubmit={this.state.id !== \"\" ?\r\n                        this.updateAnimal : this.SubmitAnimal} onReset={this.resetForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type=\"text\" placeholder=\"Enter a Name\"\r\n                                                  className={\"bg-dark text-white\"} name={\"name\"}\r\n                                                  value={name} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Age</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"number\"} placeholder=\"Age\"\r\n                                                  className={\"bg-dark text-white\"} name={\"age\"}\r\n                                                  value={age} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId={\"formGridTitle\"}>\r\n                                    <Form.Label>Type</Form.Label>\r\n                                    <Form.Control required autoComplete={\"off\"} type={\"text\"} placeholder=\"Type\"\r\n                                                  className={\"bg-dark text-white\"} name={\"typ\"}\r\n                                                  value={typ} onChange={this.animalChange}/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> {this.state.id !== \"\" ? \"Update\" : \"Save\"}\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Reset\r\n                            </Button>{' '}\r\n                            <Button variant=\"info\" type=\"button\" onClick={this.animalList.bind()}>\r\n                                <FontAwesomeIcon icon={faList} /> Animal List\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\AnimalList.js",["47"],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\MyToast.js",[],"D:\\SZKOLA\\PROGRAMOWANIE\\DO SZKOLY\\sem5\\JavaEE\\Vet\\src\\main\\webapp\\vetweb\\src\\components\\UserList.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":105,"column":27,"nodeType":"54","messageId":"55","endLine":105,"endColumn":35},{"ruleId":"52","severity":1,"message":"56","line":2,"column":61,"nodeType":"54","messageId":"55","endLine":2,"endColumn":64},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'animalID' is assigned a value but never used.","Identifier","unusedVar","'Nav' is defined but never used.","no-global-assign","no-unsafe-negation"]